// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/9/Square/Square.jack

/** Implements a graphical square.
    The square has top-left x and y coordinates, and a size. */
class Square {

   field int x, y; // screen location of the top-left corner of this square
   field int size; // length of this square, in pixels

   /** Constructs and draws a new square with a given location and size. */
   constructor Square new(int ax, int ay, int asize) {
      let x = ax;
      let y = ay;
      let size = asize;
      do draw();
      return this;
   }

    method int getX() { return x; }
    method int getY() { return y; }

   /** Disposes this square. */
   method void dispose() {
      do Memory.deAlloc(this);
      return;
   }

   /** Draws this square in its current (x,y) location */
   method void draw() {
      // Draws the square using the color black
      do Screen.setColor(true);
      do Screen.drawRectangle(x, y, x + size, y + size);
      return;
   }

   /** Erases this square. */
   method void erase() {
      // Draws the square using the color white (background color)
      do Screen.setColor(false);
      do Screen.drawRectangle(x, y, x + size, y + size);
      return;
   }

   /** Moves this square up by 2 pixels (if possible). */
   method boolean moveUp(boolean flag) {
      if (y > 1) {
         // Erases the bottom two rows of this square in its current location
         if (flag) {
            do erase();
         }
         let y = y - 3;
         do draw();
         return true;
      }
      return false;
   }

   /** Moves the square down by 2 pixels (if possible). */
   method boolean moveDown(boolean flag) {
      if ((y + size) < 254) {
         if (flag) {
            do erase();
         }
         let y = y + 3;
         do draw();
         return true;
      }
      return false;
   }

   /** Moves the square left by 2 pixels (if possible). */
   method boolean moveLeft(boolean flag) {
      if (flag) {
            do erase();
         }
      if (x > 1) {
         let x = x - 3;
         do draw();
         return true;
      }
      return false;
   }

   /** Moves the square right by 2 pixels (if possible). */
   method boolean moveRight(boolean flag) {
      if ((x + size) < 510) {
         if (flag) {
            do erase();
         }
         let x = x + 3;
         do draw();
         return true;
      }
      return false;
   }
}
