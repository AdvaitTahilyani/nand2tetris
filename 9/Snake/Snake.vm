function Snake.new 0
push constant 4
call Memory.alloc 1
pop pointer 0
push constant 3
pop static 0
push constant 1
pop this 0
push constant 25
call Array.new 1
pop this 1
push constant 0
push this 1
add
push constant 2
call Array.new 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push this 1
add
pop pointer 1
push that 0
pop this 2
push constant 0
push this 2
add
push argument 0
push argument 1
push static 0
call Square.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push this 2
add
push argument 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
return
function Snake.increase 3
push argument 0
pop pointer 0
push this 0
push this 1
add
push constant 2
call Array.new 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 0
push constant 1
sub
push this 1
add
pop pointer 1
push that 0
pop this 2
push constant 0
push this 2
add
pop pointer 1
push that 0
pop this 3
push this 3
call Square.getX 1
pop local 2
push this 3
call Square.getY 1
pop local 0
push constant 1
push this 2
add
pop pointer 1
push that 0
pop local 1
push this 0
push this 1
add
pop pointer 1
push that 0
pop this 2
push local 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
push this 2
add
push local 2
push constant 3
sub
push local 0
push static 0
call Square.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE0
push local 1
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
push this 2
add
push local 2
push constant 3
add
push local 0
push static 0
call Square.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE1
push local 1
push constant 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
push this 2
add
push local 2
push local 0
push constant 3
sub
push static 0
call Square.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE2
push local 1
push constant 3
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
push this 2
add
push local 2
push local 0
push constant 3
add
push static 0
call Square.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE3
push this 0
push constant 1
add
pop this 0
push constant 0
return
function Snake.move 6
push argument 0
pop pointer 0
push constant 0
pop local 0
push pointer 0
call Snake.getX 1
pop local 1
push pointer 0
call Snake.getY 1
pop local 2
push this 0
push constant 1
sub
pop local 3
push this 0
push constant 1
sub
push this 1
add
pop pointer 1
push that 0
pop this 2
push constant 0
push this 2
add
pop pointer 1
push that 0
pop this 3
push this 3
call Square.erase 1
pop temp 0
push this 3
call Square.dispose 1
pop temp 0
push this 2
call Array.dispose 1
pop temp 0
label WHILE_EXP0
push local 3
push constant 0
gt
not
if-goto WHILE_END0
push local 3
push this 1
add
pop pointer 1
push that 0
pop local 5
push local 3
push this 1
add
push local 3
push constant 1
sub
push this 1
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 3
push constant 1
sub
pop local 3
goto WHILE_EXP0
label WHILE_END0
push constant 0
push this 1
add
push constant 2
call Array.new 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push this 1
add
pop pointer 1
push that 0
pop this 2
push constant 0
push this 2
add
push local 1
push local 2
push static 0
call Square.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push this 2
add
pop pointer 1
push that 0
pop this 3
push this 0
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
pop local 0
label IF_FALSE0
push constant 1
push this 2
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 1
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 3
push local 0
call Square.moveRight 2
not
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
call Snake.reset 1
pop temp 0
push constant 0
return
label IF_FALSE2
label IF_FALSE1
push argument 1
push constant 1
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 3
push local 0
call Square.moveLeft 2
not
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push pointer 0
call Snake.reset 1
pop temp 0
push constant 0
return
label IF_FALSE4
label IF_FALSE3
push argument 1
push constant 2
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push this 3
push local 0
call Square.moveUp 2
not
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push pointer 0
call Snake.reset 1
pop temp 0
push constant 0
return
label IF_FALSE6
label IF_FALSE5
push argument 1
push constant 3
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push this 3
push local 0
call Square.moveDown 2
not
if-goto IF_TRUE8
goto IF_FALSE8
label IF_TRUE8
push pointer 0
call Snake.reset 1
pop temp 0
push constant 0
return
label IF_FALSE8
label IF_FALSE7
push constant 0
return
function Snake.reset 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 0
lt
not
if-goto WHILE_END0
push local 0
push this 1
add
pop pointer 1
push that 0
pop this 2
push constant 0
push this 2
add
pop pointer 1
push that 0
pop this 3
push this 3
call Square.erase 1
pop temp 0
push this 3
call Square.dispose 1
pop temp 0
push this 2
call Array.dispose 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 1
pop this 0
push constant 0
push this 1
add
push constant 2
call Array.new 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push this 1
add
pop pointer 1
push that 0
pop this 2
push constant 0
push this 2
add
push constant 0
push constant 0
push static 0
call Square.new 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push this 2
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Snake.getX 0
push argument 0
pop pointer 0
push constant 0
push this 1
add
pop pointer 1
push that 0
pop this 2
push constant 0
push this 2
add
pop pointer 1
push that 0
pop this 3
push this 3
call Square.getX 1
return
function Snake.getY 0
push argument 0
pop pointer 0
push constant 0
push this 1
add
pop pointer 1
push that 0
pop this 2
push constant 0
push this 2
add
pop pointer 1
push that 0
pop this 3
push this 3
call Square.getY 1
return
function Snake.getSize 0
push argument 0
pop pointer 0
push this 0
return
function Snake.dispose 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 0
lt
not
if-goto WHILE_END0
push local 0
push this 1
add
pop pointer 1
push that 0
pop this 2
push constant 0
push this 2
add
pop pointer 1
push that 0
pop this 3
push this 3
call Square.erase 1
pop temp 0
push this 3
call Square.dispose 1
pop temp 0
push this 2
call Array.dispose 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push this 1
call Array.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
